{"version":3,"sources":["Containers/Manual.js","Components/Days.js","Components/TimeSelect.js","Components/Duration.js","Components/Valves.js","Components/ScheduleStepper.js","Components/DisplaySchedule.js","Containers/Schedule.js","Containers/Home.js","Containers/AllTabs.js","App.js","serviceWorker.js","index.js"],"names":["Manual","props","state","valve","fetch","method","then","res","console","log","style","marginTop","textAlign","Typography","variant","Grid","item","xs","margin","ButtonGroup","fullWidth","aria-label","Button","onClick","turnOn","color","turnOff","Component","Days","container","FormControlLabel","control","Checkbox","checked","mon","onChange","handleChange","label","labelPlacement","tue","wed","thu","fri","sat","sun","next","TimeSelect","utils","DateFnsUtils","id","value","time","handleDateChange","KeyboardButtonProps","width","back","Duration","TextField","type","duration","handleNumChange","Valves","numValves","setSchedule","ScheduleStepper","React","useState","activeStep","setActiveStep","maxWidth","Stepper","Step","StepLabel","step","prevActiveStep","startTime","getContent","DisplaySchedule","Paper","height","align","marginLeft","fontSize","daysArr","dayStr","x","parseInt","length","displayDays","displayData","days","timeString","addon","hours","substring","rest","String","displayTime","marginBottom","stations","delSchedule","Schedule","name","event","setState","target","date","scheduleDays","currentSchedule","this","getSchedule","json","result","status","headers","body","JSON","stringify","toTimeString","split","dayArray","tempArr","push","renderSchedule","Home","mockrain","weather","curTime","Date","toLocaleString","loaded","checkMockStatus","getWeather","setInterval","Switch","changeMockStatus","paddingTop","icon","paddingBottom","display","displayIcon","Math","round","temperature","precipProbability","humidity","windSpeed","displaySwitch","useStyles","makeStyles","root","flexGrow","AllTabs","classes","setValue","className","Tabs","newValue","indicatorColor","textColor","centered","Tab","output","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29d003dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass Manual extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    turnOn(valve){\r\n        fetch('http://192.168.1.30:8080/on/' + valve,{\r\n            method: \"POST\"\r\n        })\r\n        .then(res => console.log(res))\r\n    }\r\n    turnOff(valve){\r\n        fetch('http://192.168.1.30:8080/off/' + valve,{\r\n            method: \"POST\"\r\n        })\r\n        .then(res => console.log(res))\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 30, textAlign: 'center'}}>\r\n                <Typography variant=\"h6\">Valve 1</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(1)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(1)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 2</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(2)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(2)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 3</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(3)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(3)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 4</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(4)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(4)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 5</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(5)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(5)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 6</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(6)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(6)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 7</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(7)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(7)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n                <Typography style={{marginTop: 20}} variant=\"h6\">Valve 8</Typography>\r\n                <Grid item xs={1} style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth aria-label=\"full width outlined button group\">\r\n                        <Button onClick={() => this.turnOn(8)} color=\"primary\">ON</Button>\r\n                        <Button onClick={() => this.turnOff(8)} color=\"secondary\">OFF</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manual;","import React from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function Days(props){\r\n    /*\r\n        const [state, setState] = React.useState({\r\n        mon: false,\r\n        tue: false,\r\n        wed: false,\r\n        thu: false,\r\n        fri: false,\r\n        sat: false,\r\n        sun: false\r\n      });\r\n\r\n      const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n      };\r\n    */\r\n    \r\n    return(\r\n        <div style={{marginTop: 30, textAlign: 'center'}}>\r\n            <Grid container>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.mon} onChange={props.handleChange('mon')} color=\"primary\" />}\r\n                        label=\"Monday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.tue} onChange={props.handleChange('tue')} color=\"primary\" />}\r\n                        label=\"Tuesday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.wed} onChange={props.handleChange('wed')} color=\"primary\" />}\r\n                        label=\"Wednesday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.thu} onChange={props.handleChange('thu')} color=\"primary\" />}\r\n                        label=\"Thursday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.fri} onChange={props.handleChange('fri')} color=\"primary\" />}\r\n                        label=\"Friday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.sat} onChange={props.handleChange('sat')} color=\"primary\" />}\r\n                        label=\"Saturday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs style={{textAlign: 'center'}}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={props.state.sun} onChange={props.handleChange('sun')} color=\"primary\" />}\r\n                        label=\"Sunday\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Button onClick={props.next} variant=\"contained\" color=\"primary\" style={{marginTop: 30}}>Next</Button>\r\n        </div>\r\n    );\r\n}","import 'date-fns';\r\nimport React from 'react';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n  } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function TimeSelect(props){\r\n    return(\r\n        <div style={{textAlign: 'center', marginTop: 40}}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardTimePicker\r\n          margin=\"normal\"\r\n          id=\"time-picker\"\r\n          label=\"Desired Time\"\r\n          value={props.time}\r\n          onChange={props.handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n        <div style={{width: 140, margin: 'auto', marginTop: 30}}>\r\n        <Grid item xs style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth>\r\n                        <Button onClick={props.back} color=\"primary\">Back</Button>\r\n                        <Button onClick={props.next} color=\"primary\">Next</Button>\r\n                    </ButtonGroup>\r\n        </Grid>\r\n        </div>\r\n        \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Duration(props){\r\n    return (\r\n        <div style={{textAlign: 'center', marginTop: 50}}>\r\n            <TextField\r\n          label=\"Duration(Minutes)\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          value={props.duration}\r\n          onChange={props.handleNumChange('duration')}\r\n        />\r\n        <div style={{width: 140, margin: 'auto', marginTop: 30}}>\r\n        <Grid item xs style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth>\r\n                        <Button onClick={props.back} color=\"primary\">Back</Button>\r\n                        <Button onClick={props.next} color=\"primary\">Next</Button>\r\n                    </ButtonGroup>\r\n        </Grid>\r\n        </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function Valves(props){\r\n    return (\r\n        <div style={{textAlign: 'center', marginTop: 50}}>\r\n            <TextField\r\n          label=\"# of Valves(1-8)\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          value={props.numValves}\r\n          onChange={props.handleNumChange('numValves')}\r\n        />\r\n        <div style={{width: 140, margin: 'auto', marginTop: 30}}>\r\n        <Grid item xs style={{margin: 'auto'}}>\r\n                    <ButtonGroup variant=\"contained\" fullWidth>\r\n                        <Button onClick={props.back} color=\"primary\">Back</Button>\r\n                        <Button onClick={props.setSchedule} color=\"primary\">Finish</Button>\r\n                    </ButtonGroup>\r\n        </Grid>\r\n        </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Days from './Days';\r\nimport TimeSelect from './TimeSelect';\r\nimport Duration from './Duration';\r\nimport Valves from './Valves';\r\n\r\nexport default function ScheduleStepper(props){\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    function getContent(step){\r\n        switch(step){\r\n            case 0:\r\n                return <Days state={props.state} handleChange={props.handleChange} next={() => setActiveStep(prevActiveStep => prevActiveStep + 1)}/>;\r\n            case 1:\r\n                return <TimeSelect time={props.state.startTime} handleDateChange={props.handleDateChange} back={() => setActiveStep(prevActiveStep => prevActiveStep - 1)} next={() => setActiveStep(prevActiveStep => prevActiveStep + 1)}/>;\r\n            case 2:\r\n                return <Duration handleNumChange={props.handleNumChange} duration={props.state.duration} back={() => setActiveStep(prevActiveStep => prevActiveStep - 1)} next={() => setActiveStep(prevActiveStep => prevActiveStep + 1)}/>\r\n            case 3:\r\n                return <Valves setSchedule={props.setSchedule} handleNumChange={props.handleNumChange} numValves={props.state.numValves} back={() => setActiveStep(prevActiveStep => prevActiveStep - 1)} next={() => setActiveStep(prevActiveStep => prevActiveStep + 1)}/>\r\n            default:\r\n                return <h1>Unknown Step</h1>\r\n        }\r\n    }\r\n    return(\r\n        <div style={{margin: 'auto', marginTop: 20, maxWidth: 1200}}>\r\n        <Stepper activeStep={activeStep}>\r\n            <Step>\r\n                <StepLabel>\r\n                    Select Days of the Week\r\n                </StepLabel>\r\n            </Step>\r\n            <Step>\r\n                <StepLabel>\r\n                    Select Start Time\r\n                </StepLabel>\r\n            </Step>\r\n            <Step>\r\n                <StepLabel>\r\n                    Select Duration\r\n                </StepLabel>\r\n            </Step>\r\n            <Step>\r\n                <StepLabel>\r\n                    Select # of Valves\r\n                </StepLabel>\r\n            </Step>\r\n        </Stepper>\r\n        {getContent(activeStep)}\r\n        \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Paper, Grid, Typography, Button} from '@material-ui/core';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport Timer from '@material-ui/icons/Timer';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport ValveIcon from '@material-ui/icons/InvertColors';\r\n\r\nexport default function DisplaySchedule(props){\r\n    function displayDays(daysArr){\r\n        let dayStr = \"\";\r\n        for(const x in daysArr){\r\n            if(parseInt(x) === (daysArr.length - 1)){\r\n                dayStr = dayStr + daysArr[x]\r\n            }\r\n            else{\r\n                dayStr = dayStr + daysArr[x] + '/';\r\n            }\r\n        }\r\n        return dayStr;\r\n    }\r\n    function displayTime(timeString){\r\n        let addon = ' AM';\r\n        let hours = parseInt(timeString.substring(0,2));\r\n        let rest = timeString.substring(2,5);\r\n        if (hours > 12){\r\n            hours = hours - 12;\r\n            addon = ' PM';\r\n            return String(hours) + rest + addon;\r\n        }\r\n        else{\r\n            return timeString + addon;\r\n        }\r\n    }\r\n    return (\r\n        <Paper style={{margin: 'auto', marginTop: 80, width: 500, height: 350}}>\r\n            <Typography align=\"center\" variant=\"h4\">CURRENT SCHEDULE</Typography>\r\n            <Grid container style={{marginLeft: 36, marginTop: 20}}>\r\n                <Grid item xs={2}>\r\n                    <DateRange style={{fontSize: 50}}/>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Typography style={{marginTop: 11.5}} variant=\"h5\">{displayDays(props.displayData.days)}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container style={{marginLeft: 36}}>\r\n                <Grid item xs={2}>\r\n                    <ScheduleIcon style={{fontSize: 50}}/>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Typography style={{marginTop: 11.5}} variant=\"h5\">{displayTime(props.displayData.startTime)}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container style={{marginLeft: 36}}>\r\n                <Grid item xs={2}>\r\n                    <Timer style={{fontSize: 50}}/>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Typography style={{marginTop: 11.5}} variant=\"h5\">{props.displayData.duration + ' Minute(s)'}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container style={{marginLeft: 36, marginBottom: 20}}>\r\n                <Grid item xs={2}>\r\n                    <ValveIcon style={{fontSize: 50}}/>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Typography style={{marginTop: 11.5}} variant=\"h5\">{props.displayData.stations + ' Valve(s)'}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <Button onClick={props.delSchedule} variant=\"contained\" color='primary'>Modify Schedule</Button>\r\n            </div> \r\n        </Paper>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport ScheduleStepper from '../Components/ScheduleStepper';\r\nimport DisplaySchedule from '../Components/DisplaySchedule';\r\n\r\nclass Schedule extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mon: false,\r\n            tue: false,\r\n            wed: false,\r\n            thu: false,\r\n            fri: false,\r\n            sat: false,\r\n            sun: false,\r\n            scheduleDays: [],\r\n            startTime: null,\r\n            duration: '',\r\n            numValves: '',\r\n            currentSchedule: null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getSchedule();\r\n    }\r\n    delSchedule(){\r\n        fetch('http://192.168.1.30:8080/schedule/cancel', {\r\n            method: 'POST'\r\n        })\r\n        .then(this.setState({currentSchedule: 'none'}))\r\n    }\r\n    getSchedule(){\r\n        fetch('http://192.168.1.30:8080/schedule', {\r\n            method: 'GET'\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            if(result.status === 500){\r\n                this.setState({currentSchedule: 'none'})\r\n            }\r\n            else{\r\n                this.setState({currentSchedule: result})\r\n            }\r\n        })\r\n    }\r\n    setSchedule(){\r\n        fetch('http://192.168.1.30:8080/schedule', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                startTime: this.state.startTime.toTimeString().split(\" \")[0].substring(0,5),\r\n                duration: parseInt(this.state.duration),\r\n                days: this.dayArray(),\r\n                stations: parseInt(this.state.numValves)\r\n            })\r\n        })\r\n        .then(() => this.getSchedule())\r\n    }\r\n    dayArray(){\r\n        let tempArr = []\r\n        if(this.state.mon === true){\r\n            tempArr.push('Mon')\r\n        }\r\n        if(this.state.tue === true){\r\n            tempArr.push('Tue')\r\n        }\r\n        if(this.state.wed === true){\r\n            tempArr.push('Wed')\r\n        }\r\n        if(this.state.thu === true){\r\n            tempArr.push('Thu')\r\n        }\r\n        if(this.state.fri === true){\r\n            tempArr.push('Fri')\r\n        }\r\n        if(this.state.sat === true){\r\n            tempArr.push('Sat')\r\n        }\r\n        if(this.state.sun === true){\r\n            tempArr.push('Sun')\r\n        }\r\n        return tempArr;\r\n    }\r\n    handleChange = name => event => {\r\n        this.setState({[name]: event.target.checked });\r\n    }\r\n    handleDateChange = date => {\r\n        this.setState({startTime: date})\r\n    }\r\n    handleNumChange = name => event => {\r\n        this.setState({[name]: event.target.value});\r\n    }\r\n    renderSchedule(){\r\n        switch(this.state.currentSchedule){\r\n            case null:\r\n                return <div/>;\r\n            case 'none':\r\n                return <ScheduleStepper setSchedule={() => this.setSchedule()} handleNumChange={this.handleNumChange} handleDateChange={this.handleDateChange} handleChange={this.handleChange} state={this.state}/>;\r\n            default:\r\n                return <DisplaySchedule delSchedule={() => this.delSchedule()} displayData={this.state.currentSchedule}/>;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>   \r\n                {this.renderSchedule()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","import React, { Component } from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { Typography, Grid, Paper } from '@material-ui/core';\r\nimport Grain from '@material-ui/icons/Grain';\r\nimport WbCloudy from '@material-ui/icons/WbCloudy';\r\nimport WbSunny from '@material-ui/icons/WbSunny';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mockrain: null,\r\n            weather: {},\r\n            curTime: new Date().toLocaleString(),\r\n            loaded: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.checkMockStatus();\r\n        this.getWeather();\r\n        setInterval( () => {\r\n            this.setState({\r\n              curTime : new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    getWeather(){\r\n        fetch('http://192.168.1.30:8080/weather', {\r\n            method: 'GET'\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({weather : result, loaded: true}))\r\n    }\r\n    checkMockStatus(){\r\n        fetch('http://192.168.1.30:8080/mockrain', {\r\n            method: 'GET'\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({mockrain: result}))\r\n    }\r\n    changeMockStatus(){\r\n        fetch('http://192.168.1.30:8080/mockrain', {\r\n            method: 'POST'\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => this.setState({mockrain: result}))\r\n    }\r\n    displaySwitch(){\r\n        if(this.state.mockrain === null){\r\n            return <div/>\r\n        }\r\n        else{\r\n            return  <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                            checked={this.state.mockrain}\r\n                            onChange={() => this.changeMockStatus()}\r\n                            />\r\n                        }\r\n                        label=\"Emulate Rain\"\r\n                    />;\r\n            }\r\n    }\r\n    displayIcon(name){\r\n        switch(name){\r\n            case 'cloudy':\r\n                return <WbCloudy style={{fontSize: 70, marginLeft: 20}}/>;\r\n            case 'sunny':\r\n                return <WbSunny style={{fontSize: 70, marginLeft: 20}}/>;\r\n            case 'rainy':\r\n                return <Grain style={{fontSize: 70, marginLeft: 20}}/>;\r\n            default:\r\n                return <WbSunny style={{fontSize: 70, marginLeft: 20}}/>;\r\n        }\r\n    }\r\n    render() {\r\n        if(this.state.loaded === false){\r\n            return (<div/>);\r\n        }\r\n        else{\r\n            return (\r\n                <div>\r\n                    <Paper style={{margin: 'auto', width: 500, marginTop: 40}}>\r\n                        <Typography variant='h5' style={{marginLeft: 20, paddingTop: 20}}>Houston, TX</Typography>\r\n                        <Typography style={{marginLeft: 20}}>{this.state.curTime}</Typography>\r\n                        <Typography style={{marginLeft: 20, marginBottom: 20}}>{this.state.weather.icon}</Typography>\r\n                        <Grid container style={{paddingBottom: 20}}>\r\n                            <Grid item xs>\r\n                                <div style={{display: 'flex'}}>\r\n                                {this.displayIcon(this.state.weather.icon)}\r\n                                <Typography variant=\"h3\" style={{marginTop: 12.5, marginLeft: 10}}>{Math.round(this.state.weather.temperature)}&#176;F</Typography>\r\n                                </div>\r\n                                \r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Typography style={{marginTop: 5}} variant=\"body2\">{\"Precipitation: \" + (this.state.weather.precipProbability)*100 + '%'}</Typography>\r\n                                <Typography variant=\"body2\">{\"Humidity: \" + (this.state.weather.humidity)*100 + '%'}</Typography>\r\n                                <Typography variant=\"body2\">{\"Wind: \" + Math.round(this.state.weather.windSpeed) + ' mph'}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <br/>\r\n                    <div style={{textAlign: 'center'}}>\r\n                        {this.displaySwitch()}\r\n                    </div> \r\n                </div>\r\n            );\r\n        }   \r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Manual from './Manual';\r\nimport Schedule from './Schedule';\r\nimport Home from './Home';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function AllTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  function output(value){\r\n    switch(value){\r\n      case 0:\r\n        return <Home/>\r\n      case 1:\r\n        return <Schedule/>\r\n      case 2:\r\n        return <Manual/>\r\n      default:\r\n        return <Home/>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Home\" value={0} />\r\n        <Tab label=\"Schedule\" value={1} />\r\n        <Tab label=\"Manual\" value={2} />\r\n      </Tabs>\r\n    </Paper>\r\n    {output(value)}\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport AllTabs from './Containers/AllTabs';\n\nfunction App() {\n  return (\n    <div>\n      <AllTabs/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}